{"version":3,"sources":["components/Formulario.jsx","hooks/useFormulario.js","components/Todo.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["Formulario","agregatTodo","initialState","useState","inputs","setInputs","e","target","name","value","checked","type","old","useFormulario","nombre","descripcion","estado","prioridad","handleChange","reset","onSubmit","preventDefault","console","log","trim","Swal","fire","icon","title","text","id","uuidv4","focus","className","placeholder","onChange","cols","rows","htmlFor","Todo","nombreItem","eliminarTodo","editarTodo","onClick","TodoList","todos","setTodos","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","filter","item","editarTodos","map","todo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f188f54e.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useFormulario } from \"../hooks/useFormulario\";\r\n\r\nconst Formulario = ({agregatTodo}) => {\r\n\r\n    const initialState = {\r\n        nombre: '',\r\n        descripcion: '',\r\n        estado: 'pendiente',\r\n        prioridad: false\r\n    }\r\n\r\n    const [inputs, handleChange, reset] = useFormulario(initialState)\r\n\r\n    const {nombre, descripcion, estado, prioridad} = inputs;\r\n\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(inputs);\r\n        if(!nombre.trim()){\r\n            console.log('no dejar en blanco');\r\n            e.target[0].focus();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'El nombre no puede ser vacío',\r\n              });\r\n            return\r\n        }\r\n        if(!descripcion.trim()){\r\n            e.target[1].focus();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'La descripción no puede estar vacía',\r\n              });\r\n            return\r\n        }\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Éxito',\r\n            text: 'Datos guardados con éxito',\r\n          });\r\n        agregatTodo({\r\n            nombre: nombre,\r\n            descripcion: descripcion,\r\n            estado: estado === 'pendiente' ? false : true,\r\n            prioridad: prioridad,\r\n            id: uuidv4()\r\n        })\r\n        \r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Agregar TODO</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control mb-2\"\r\n                    name=\"nombre\"\r\n                    placeholder=\"Ingrese todo nombre\"\r\n                    value={nombre}\r\n                    onChange={handleChange}\r\n                />\r\n                <textarea\r\n                    className=\"form-control mb-2\"\r\n                    placeholder=\"Ingrese todo descripcion\" \r\n                    name=\"descripcion\"  \r\n                    cols=\"30\" \r\n                    rows=\"10\"\r\n                    value={descripcion}\r\n                    onChange={handleChange}\r\n                />\r\n                <select \r\n                    name=\"estado\" \r\n                    className=\"form-control mb-2\"\r\n                    value={estado}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"pendiente\">Pendiente</option>\r\n                    <option value=\"completado\">Completado</option>\r\n                </select>\r\n                <div className=\"form-check\">\r\n                    <input \r\n                        className=\"form-check-input\" \r\n                        type=\"checkbox\"\r\n                        onChange={handleChange}\r\n                        id=\"flexCheckDefault\"\r\n                        name=\"prioridad\"\r\n                        value={prioridad}\r\n                    />\r\n                    <label \r\n                        className=\"form-check-label\" \r\n                        htmlFor=\"flexCheckDefault\"\r\n                    >\r\n                        Set priority\r\n                </label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Agregar</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n","import { useState } from \"react\"\r\n\r\nexport const useFormulario = (initialState = {}) => {\r\n\r\n    const [inputs, setInputs] = useState(initialState)\r\n\r\n    const handleChange = (e) =>{\r\n        const {name, value, checked, type} = e.target;\r\n\r\n        setInputs((old) => ({\r\n            ...old,\r\n            [name]: type === \"checkbox\" ? checked : value\r\n        }));\r\n    }\r\n\r\n    const reset = () => {\r\n        setInputs(initialState)\r\n    }\r\n\r\n    return [inputs, handleChange, reset]\r\n}\r\n","const Todo = ({ nombreItem, eliminarTodo, editarTodo }) => {\r\n\r\n    const {id, nombre, descripcion, estado, prioridad} = nombreItem\r\n\r\n    return (\r\n        <>\r\n          <li className=\"list-group-item d-flex justify-content-k\">\r\n              <div className=\"ms-2 me-auto\">\r\n                  <div className=\"fw-bold\">\r\n                      {nombre} ({estado ? 'Finalizado' : 'Pendiente'})\r\n                  </div>\r\n                  <p>{descripcion}</p>\r\n                  <div>\r\n                      <button \r\n                        className=\"btn btn-danger me-2\" \r\n                        onClick={() => eliminarTodo(id)}\r\n                      >Eliminar</button>\r\n\r\n                      <button \r\n                        className=\"btn btn-warning\" \r\n                        onClick={() => editarTodo(id)} \r\n                      >Editar</button>\r\n                  </div>\r\n              </div>\r\n              <span className=\"badge bg-primary rounded-pill\">\r\n                  {prioridad && \"Prioritario\"}\r\n              </span>\r\n          </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import { useEffect, useState } from \"react\"\r\nimport Formulario from \"./Formulario\"\r\nimport Todo from \"./Todo\"\r\n\r\nconst TodoList = () => {\r\n\r\n    const [todos, setTodos] = useState ([]);\r\n\r\n    useEffect(() =>{\r\n        if(localStorage.getItem(\"todos\")){\r\n            setTodos(JSON.parse(localStorage.getItem(\"todos\")));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const agregatTodo = todo => {\r\n        console.log(todo);\r\n        setTodos((old) => [...old, todo]);\r\n    }\r\n\r\n    const eliminarTodo = (id) =>{\r\n        setTodos((old) => old.filter(item => item.id !== id));\r\n    }\r\n\r\n    const editarTodo = (id) =>{\r\n        const editarTodos = todos.map( item => (\r\n            item.id === id ? {...item, estado: !item.estado} : item\r\n        ))\r\n\r\n        setTodos(editarTodos)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Componente lista</h2>\r\n            <Formulario agregatTodo={agregatTodo}/>\r\n            <ul className=\"list-group list-group-numbered mt-2\">\r\n            {\r\n                todos.map(item => (\r\n                    <Todo \r\n                        key={item.id} \r\n                        nombreItem={item} \r\n                        eliminarTodo={eliminarTodo}\r\n                        editarTodo={editarTodo}\r\n                    />\r\n                ))\r\n            }\r\n            </ul>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import TodoList from \"./components/TodoList\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            Hola a todos!\r\n            <TodoList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}